version: '3.9'

services:
  mcp_api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mcp_api
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./data:/app/app/data  # Mount for SQLite DB

    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - RESULT_BACKEND=redis://redis:6379/0
      - GEMINI_API_KEY=${GEMINI_API_KEY}

  mcp_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mcp_worker
    command: celery -A app.worker.celery worker --loglevel=info
    volumes:
      - .:/app
      - ./data:/app/app/data  # Mount for SQLite DB

    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - RESULT_BACKEND=redis://redis:6379/0
      - GEMINI_API_KEY=${GEMINI_API_KEY}

  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9091:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  grafana_data:
